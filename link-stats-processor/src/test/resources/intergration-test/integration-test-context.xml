<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:int="http://www.springframework.org/schema/integration"
        xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
        xmlns:rabbit="http://www.springframework.org/schema/rabbit"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/integration
                            http://www.springframework.org/schema/integration/spring-integration.xsd
                            http://www.springframework.org/schema/integration/amqp 
                            http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
                            http://www.springframework.org/schema/rabbit 
                            http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
                            http://www.springframework.org/schema/context 
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <context:annotation-config />
    <context:component-scan base-package="awesm.hoang.it" />

    <!-- Properties -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="locations" ref="propertiesLocations" />
    </bean>

    <util:list id="propertiesLocations">
        <value>classpath:intergration-test/integration-test.properties</value>
        <value>file:///${CONFIG_OVERRIDE}</value>
    </util:list>


    <!-- JSON Data Format -->
    <bean id="objectMapperFactory" class="com.hoang.core.dataformat.ObjectMapperFactory" />
    <bean id="objectMapper" factory-bean="objectMapperFactory" factory-method="build" />
    <bean id="jackson2JsonObjectMapper" class="org.springframework.integration.support.json.Jackson2JsonObjectMapper">
        <constructor-arg ref="objectMapper" />
    </bean>

    <!-- RabbitMQ Integration Configuration -->
    <rabbit:connection-factory id="rabbitConnectionFactory" addresses="${amqp.addresses}" 
          username="${amqp.username}" password="${amqp.password}"/>
    <rabbit:admin connection-factory="rabbitConnectionFactory"/>
    <rabbit:template id="clickRabbitTemplate" queue="${amqp.click.queue}" connection-factory="rabbitConnectionFactory" />

    <int:channel id="clickRequestChannel"/>

    <int:gateway id="clickGateway" service-interface="com.hoang.it.ClickGateway"
          default-request-channel="clickRequestChannel" />
    <int:object-to-json-transformer input-channel="clickRequestChannel" output-channel="clickRequestTransformedChannel" 
          object-mapper="jackson2JsonObjectMapper"/>
    <int-amqp:channel id="clickRequestTransformedChannel"  connection-factory="rabbitConnectionFactory" message-driven="false" 
          queue-name="${amqp.click.queue}" />

    <int:channel id="conversionRequestChannel"/>
    <int:gateway id="conversionGateway" service-interface="com.hoang.it.ConversionGateway"
          default-request-channel="conversionRequestChannel" />
    <int:object-to-json-transformer input-channel="conversionRequestChannel" output-channel="conversionRequestTransformedChannel" 
          object-mapper="jackson2JsonObjectMapper"/>
    <int-amqp:channel id="conversionRequestTransformedChannel"  connection-factory="rabbitConnectionFactory" message-driven="false" 
          queue-name="${amqp.conversion.queue}" />


    <int:channel id="updateRequestChannel"/>
    <int:gateway id="updateGateway" service-interface="com.hoang.it.UpdateGateway"
          default-request-channel="updateRequestChannel" />
    <int:object-to-json-transformer input-channel="updateRequestChannel" output-channel="updateRequestTransformedChannel" 
          object-mapper="jackson2JsonObjectMapper"/>
    <int-amqp:channel id="updateRequestTransformedChannel"  connection-factory="rabbitConnectionFactory" message-driven="false" 
          queue-name="${amqp.update.queue}" />


    <!-- Redis Configuration -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:use-pool="true" 
            p:host-name="${redis.host}" p:port="${redis.port}" />

    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory"
               p:defaultSerializer-ref="stringRedisSerializer" />


    <!-- Database Configuration -->
    <bean id="consumptionsDbDataSource" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${consumptions.db.jdbc.driverClassName}" />
        <property name="url" value="${consumptions.db.jdbc.url}" />
        <property name="username" value="${consumptions.db.jdbc.username}" />
        <property name="password" value="${consumptions.db.jdbc.password}" />
    </bean>

    <bean id="consumptionsJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"  ref="consumptionsDbDataSource" />
    </bean>

    <bean id="redirectionsDbDataSource" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${redirections.db.jdbc.driverClassName}" />
        <property name="url" value="${redirections.db.jdbc.url}" />
        <property name="username" value="${redirections.db.jdbc.username}" />
        <property name="password" value="${redirections.db.jdbc.password}" />
    </bean>

    <bean id="redirectionsJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"  ref="redirectionsDbDataSource" />
    </bean>

</beans>
